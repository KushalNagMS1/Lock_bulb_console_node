<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home Security System</title>
  <style>
    body {
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background-color: #222;
      color: #fff;
      overflow: hidden;
    }

    .container {
      text-align: center;
      padding: 30px;
      background: rgba(0, 0, 0, 0.85);
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
      max-width: 350px;
    }

    .header {
      font-size: 30px;
      margin-bottom: 10px;
      color: #61dafb;
      text-transform: uppercase;
    }

    .sub-header {
      font-size: 18px;
      margin-bottom: 20px;
      color: #bbb;
    }

    .input-field {
      margin-bottom: 20px;
    }

    input[type="password"] {
      font-size: 20px;
      padding: 12px;
      width: 250px;
      text-align: center;
      border: none;
      border-radius: 5px;
      outline: none;
      background: #444;
      color: #fff;
    }

    .keypad {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 10px;
      margin: 0 auto;
    }

    .keypad button {
      font-size: 22px;
      padding: 15px;
      background-color: #444;
      border: none;
      border-radius: 5px;
      color: #fff;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.1s;
    }

    .keypad button:hover {
      background-color: #555;
    }

    .keypad button:active {
      transform: scale(0.95);
    }

    .active-key {
      background-color: #61dafb !important;
    }

    .form-actions {
      margin-top: 20px;
    }

    button.submit-btn {
      font-size: 18px;
      padding: 10px 20px;
      background-color: #61dafb;
      border: none;
      border-radius: 5px;
      color: #fff;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button.submit-btn:hover {
      background-color: #21a1f1;
    }

    .error-message {
      color: red;
      margin-bottom: 10px;
      font-size: 14px;
    }

    .attempts-message {
      color: yellow;
      font-size: 14px;
      margin-bottom: 20px;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">Welcome</div>
    <div class="sub-header">Secure Your Home with Ease</div>
    <% if (message) { %>
      <div class="error-message"><%= message %></div>
    <% } %>
    <div class="attempts-message">Remaining attempts: <%= attempts %></div>
    <form action="/submit-password" method="POST">
      <div class="input-field">
        <input type="password" id="password" name="password" readonly />
      </div>
      <div class="keypad">
        <!-- Number buttons -->
        <button type="button" id="key-1" onclick="pressKey('1')">1</button>
        <button type="button" id="key-2" onclick="pressKey('2')">2</button>
        <button type="button" id="key-3" onclick="pressKey('3')">3</button>
        <button type="button" id="key-4" onclick="pressKey('4')">4</button>
        <button type="button" id="key-5" onclick="pressKey('5')">5</button>
        <button type="button" id="key-6" onclick="pressKey('6')">6</button>
        <button type="button" id="key-7" onclick="pressKey('7')">7</button>
        <button type="button" id="key-8" onclick="pressKey('8')">8</button>
        <button type="button" id="key-9" onclick="pressKey('9')">9</button>
        <!-- Control buttons -->
        <button type="button" id="key-clear" onclick="clearPassword()">C</button>
        <button type="button" id="key-0" onclick="pressKey('0')">0</button>
        <button type="button" id="key-delete" onclick="deleteLast()">âŒ«</button>
      </div>
      <div class="form-actions">
        <button type="submit" class="submit-btn">Submit</button>
      </div>
    </form>
  </div>

  <script>
    const passwordField = document.getElementById("password");

    // Function to add numbers to the password field
    function pressKey(key) {
      passwordField.value += key;
      activateKey(key);
    }

    // Function to clear the password
    function clearPassword() {
      passwordField.value = "";
      activateKey("clear");
    }

    // Function to delete the last entered number
    function deleteLast() {
      passwordField.value = passwordField.value.slice(0, -1);
      activateKey("delete");
    }

    // Function to activate and highlight a button
    function activateKey(key) {
      const keyId = key === "clear" ? "key-clear" :
                    key === "delete" ? "key-delete" :
                    `key-${key}`;
      const keyButton = document.getElementById(keyId);

      if (keyButton) {
        keyButton.classList.add("active-key");
        setTimeout(() => keyButton.classList.remove("active-key"), 200);
      }
    }

    // Listen for keyboard inputs
    document.addEventListener("keydown", (e) => {
      if (!isNaN(e.key)) {
        pressKey(e.key);
      } else if (e.key === "Backspace") {
        deleteLast();
      } else if (e.key.toLowerCase() === "c") {
        clearPassword();
      }
    });
  </script>
</body>
</html>
